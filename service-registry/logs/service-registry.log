{"instant":{"epochSecond":1742722939,"nanoOfSecond":304641000},"thread":"main","level":"INFO","loggerName":"com.expensetracker.serviceregistry.ServiceRegistryApplication","message":"Starting ServiceRegistryApplication using Java 17.0.10 with PID 84182 (/Users/abhijitmishra/Expense Tracker Project/service-registry/target/classes started by abhijitmishra in /Users/abhijitmishra/Expense Tracker Project/service-registry)","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":351553000},"thread":"main","level":"DEBUG","loggerName":"com.expensetracker.serviceregistry.ServiceRegistryApplication","message":"Running with Spring Boot v3.2.3, Spring v6.1.4","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":352709000},"thread":"main","level":"INFO","loggerName":"com.expensetracker.serviceregistry.ServiceRegistryApplication","message":"No active profile set, falling back to 1 default profile: \"default\"","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":843916000},"thread":"main","level":"INFO","loggerName":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=9aca308c-6e00-38ad-bbae-8f4222bd1327","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":866481000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":868239000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":869080000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":872341000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":874843000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":875280000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$530/0x00000008004ea100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":875841000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":878863000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":882584000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":883333000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":883844000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":884599000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":885612000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":889298000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":889982000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":890402000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":891426000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":891921000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":991459000},"thread":"main","level":"INFO","loggerName":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8761 (http)","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":997065000},"thread":"main","level":"INFO","loggerName":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8761\"]","endOfBatch":false,"loggerFqcn":"java.util.logging.Logger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":997962000},"thread":"main","level":"INFO","loggerName":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","endOfBatch":false,"loggerFqcn":"java.util.logging.Logger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722939,"nanoOfSecond":998195000},"thread":"main","level":"INFO","loggerName":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.19]","endOfBatch":false,"loggerFqcn":"java.util.logging.Logger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":30087000},"thread":"main","level":"INFO","loggerName":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","endOfBatch":false,"loggerFqcn":"java.util.logging.Logger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":30976000},"thread":"main","level":"INFO","loggerName":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 660 ms","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":432990000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using JSON encoding codec LegacyJacksonJson","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":433473000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using JSON decoding codec LegacyJacksonJson","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":523864000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using XML encoding codec XStreamXml","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":524068000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using XML decoding codec XStreamXml","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":869986000},"thread":"main","level":"WARN","loggerName":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":879800000},"thread":"main","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","message":"Setting initial instance status as: STARTING","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":894413000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.DiscoveryClient","message":"Initializing Eureka in region us-east-1","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":894610000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.DiscoveryClient","message":"Client configured to neither register nor query for data.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":898166000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.DiscoveryClient","message":"Discovery Client initialized at timestamp 1742722940897 with initial instances count: 0","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":916101000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Initializing ...","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":917318000},"thread":"main","level":"DEBUG","loggerName":"com.netflix.discovery.endpoint.EndpointUtils","message":"The availability zone for the given region us-east-1 are [defaultZone]","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722940,"nanoOfSecond":917630000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.cluster.PeerEurekaNodes","message":"Adding new peer nodes [http://service-registry:8761/eureka/]","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":4546000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using JSON encoding codec LegacyJacksonJson","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":4757000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using JSON decoding codec LegacyJacksonJson","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":4839000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using XML encoding codec XStreamXml","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":4929000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using XML decoding codec XStreamXml","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":25724000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.cluster.PeerEurekaNodes","message":"Replica node URL:  http://service-registry:8761/eureka/","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":28403000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.registry.AbstractInstanceRegistry","message":"Finished initializing remote region registries. All known remote regions: []","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":28781000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Initialized","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":33229000},"thread":"main","level":"INFO","loggerName":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":56283000},"thread":"main","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Registering application SERVICE-REGISTRY with eureka with status UP","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":57704000},"thread":"main","level":"INFO","loggerName":"org.apache.coyote.http11.Http11NioProtocol","message":"Starting ProtocolHandler [\"http-nio-8761\"]","endOfBatch":false,"loggerFqcn":"java.util.logging.Logger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":62442000},"thread":"Thread-9","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","message":"isAws returned false","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":62866000},"thread":"Thread-9","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","message":"Initialized server context","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":63146000},"thread":"Thread-9","level":"INFO","loggerName":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","message":"Got 1 instances from neighboring DS node","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":63243000},"thread":"Thread-9","level":"INFO","loggerName":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","message":"Renew threshold is: 1","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":63546000},"thread":"Thread-9","level":"INFO","loggerName":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","message":"Changing status to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":68164000},"thread":"Thread-9","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration","message":"Started Eureka Server","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":74364000},"thread":"main","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Unregistering application SERVICE-REGISTRY with eureka with status DOWN","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":74662000},"thread":"main","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","message":"Shutting down Eureka Server..","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":77065000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Shutting down ...","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":82191000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Shut down","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":82420000},"thread":"main","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","message":"Eureka Service is now shutdown...","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":82745000},"thread":"main","level":"WARN","loggerName":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":83089000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Shutting down ...","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":85319000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Shut down","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":80026000},"thread":"Eureka-Jersey3Client-Conn-Cleaner2","level":"ERROR","loggerName":"com.netflix.discovery.shared.transport.jersey3.EurekaJersey3ClientImpl","message":"Cannot clean connections","thrown":{"commonElementCount":0,"localizedMessage":"Client instance has been closed.","message":"Client instance has been closed.","name":"java.lang.IllegalStateException","extendedStackTrace":[{"classLoaderName":"app","class":"org.glassfish.jersey.internal.guava.Preconditions","method":"checkState","file":"Preconditions.java","line":169,"exact":false,"location":"jersey-common-3.1.5.jar","version":"?"},{"classLoaderName":"app","class":"org.glassfish.jersey.client.JerseyClient","method":"checkNotClosed","file":"JerseyClient.java","line":248,"exact":false,"location":"jersey-client-3.1.5.jar","version":"?"},{"classLoaderName":"app","class":"org.glassfish.jersey.client.JerseyClient","method":"getConfiguration","file":"JerseyClient.java","line":363,"exact":false,"location":"jersey-client-3.1.5.jar","version":"?"},{"classLoaderName":"app","class":"org.glassfish.jersey.client.JerseyClient","method":"getConfiguration","file":"JerseyClient.java","line":54,"exact":false,"location":"jersey-client-3.1.5.jar","version":"?"},{"classLoaderName":"app","class":"com.netflix.discovery.shared.transport.jersey3.EurekaJersey3ClientImpl$ConnectionCleanerTask","method":"run","file":"EurekaJersey3ClientImpl.java","line":347,"exact":true,"location":"eureka-client-jersey3-2.0.1.jar","version":"2.0.1"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.util.concurrent.Executors$RunnableAdapter","method":"call","file":"Executors.java","line":539,"exact":true,"location":"?","version":"?"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.util.concurrent.FutureTask","method":"run","file":"FutureTask.java","line":264,"exact":true,"location":"?","version":"?"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask","method":"run","file":"ScheduledThreadPoolExecutor.java","line":304,"exact":true,"location":"?","version":"?"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.util.concurrent.ThreadPoolExecutor","method":"runWorker","file":"ThreadPoolExecutor.java","line":1136,"exact":true,"location":"?","version":"?"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.util.concurrent.ThreadPoolExecutor$Worker","method":"run","file":"ThreadPoolExecutor.java","line":635,"exact":true,"location":"?","version":"?"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.lang.Thread","method":"run","file":"Thread.java","line":840,"exact":true,"location":"?","version":"?"}]},"endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":30,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":89012000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.DiscoveryClient","message":"Shutting down DiscoveryClient ...","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":89474000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.DiscoveryClient","message":"Completed shut down of DiscoveryClient","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":106210000},"thread":"main","level":"INFO","loggerName":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722941,"nanoOfSecond":115312000},"thread":"main","level":"ERROR","loggerName":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nWeb server failed to start. Port 8761 was already in use.\n\nAction:\n\nIdentify and stop the process that's listening on port 8761 or configure this application to listen on another port.\n","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722976,"nanoOfSecond":806265000},"thread":"main","level":"INFO","loggerName":"com.expensetracker.serviceregistry.ServiceRegistryApplication","message":"Starting ServiceRegistryApplication using Java 17.0.10 with PID 84296 (/Users/abhijitmishra/Expense Tracker Project/service-registry/target/classes started by abhijitmishra in /Users/abhijitmishra/Expense Tracker Project/service-registry)","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722976,"nanoOfSecond":848779000},"thread":"main","level":"DEBUG","loggerName":"com.expensetracker.serviceregistry.ServiceRegistryApplication","message":"Running with Spring Boot v3.2.3, Spring v6.1.4","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722976,"nanoOfSecond":849494000},"thread":"main","level":"INFO","loggerName":"com.expensetracker.serviceregistry.ServiceRegistryApplication","message":"No active profile set, falling back to 1 default profile: \"default\"","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":281631000},"thread":"main","level":"INFO","loggerName":"org.springframework.cloud.context.scope.GenericScope","message":"BeanFactory id=9aca308c-6e00-38ad-bbae-8f4222bd1327","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":306111000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":307919000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":309130000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":313160000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":315372000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":315801000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$530/0x00000008004e7660] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":316346000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":319678000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":323860000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":324499000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":324911000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":325482000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":326445000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":329585000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":330290000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":330972000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":332204000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":332782000},"thread":"main","level":"WARN","loggerName":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","message":"Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":425773000},"thread":"main","level":"INFO","loggerName":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8761 (http)","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":430623000},"thread":"main","level":"INFO","loggerName":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8761\"]","endOfBatch":false,"loggerFqcn":"java.util.logging.Logger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":432166000},"thread":"main","level":"INFO","loggerName":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]","endOfBatch":false,"loggerFqcn":"java.util.logging.Logger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":432646000},"thread":"main","level":"INFO","loggerName":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.19]","endOfBatch":false,"loggerFqcn":"java.util.logging.Logger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":464303000},"thread":"main","level":"INFO","loggerName":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext","endOfBatch":false,"loggerFqcn":"java.util.logging.Logger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":465162000},"thread":"main","level":"INFO","loggerName":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 598 ms","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":831662000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using JSON encoding codec LegacyJacksonJson","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":832264000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using JSON decoding codec LegacyJacksonJson","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":910610000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using XML encoding codec XStreamXml","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722977,"nanoOfSecond":910903000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using XML decoding codec XStreamXml","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":239863000},"thread":"main","level":"WARN","loggerName":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":247269000},"thread":"main","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","message":"Setting initial instance status as: STARTING","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":259531000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.DiscoveryClient","message":"Initializing Eureka in region us-east-1","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":259722000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.DiscoveryClient","message":"Client configured to neither register nor query for data.","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":263601000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.DiscoveryClient","message":"Discovery Client initialized at timestamp 1742722978263 with initial instances count: 0","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":278230000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Initializing ...","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":279037000},"thread":"main","level":"DEBUG","loggerName":"com.netflix.discovery.endpoint.EndpointUtils","message":"The availability zone for the given region us-east-1 are [defaultZone]","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":279255000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.cluster.PeerEurekaNodes","message":"Adding new peer nodes [http://service-registry:8761/eureka/]","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":348202000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using JSON encoding codec LegacyJacksonJson","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":348414000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using JSON decoding codec LegacyJacksonJson","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":348493000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using XML encoding codec XStreamXml","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":348567000},"thread":"main","level":"INFO","loggerName":"com.netflix.discovery.provider.DiscoveryJerseyProvider","message":"Using XML decoding codec XStreamXml","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":368145000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.cluster.PeerEurekaNodes","message":"Replica node URL:  http://service-registry:8761/eureka/","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":371468000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.registry.AbstractInstanceRegistry","message":"Finished initializing remote region registries. All known remote regions: []","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":372082000},"thread":"main","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Initialized","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":376435000},"thread":"main","level":"INFO","loggerName":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 3 endpoint(s) beneath base path '/actuator'","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":398269000},"thread":"main","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Registering application SERVICE-REGISTRY with eureka with status UP","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":399720000},"thread":"main","level":"INFO","loggerName":"org.apache.coyote.http11.Http11NioProtocol","message":"Starting ProtocolHandler [\"http-nio-8761\"]","endOfBatch":false,"loggerFqcn":"java.util.logging.Logger","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":404162000},"thread":"Thread-9","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","message":"isAws returned false","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":404448000},"thread":"Thread-9","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","message":"Initialized server context","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":404684000},"thread":"Thread-9","level":"INFO","loggerName":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","message":"Got 1 instances from neighboring DS node","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":404786000},"thread":"Thread-9","level":"INFO","loggerName":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","message":"Renew threshold is: 1","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":404922000},"thread":"Thread-9","level":"INFO","loggerName":"com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl","message":"Changing status to UP","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":407706000},"thread":"Thread-9","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration","message":"Started Eureka Server","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":57,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":412617000},"thread":"main","level":"INFO","loggerName":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat started on port 8761 (http) with context path ''","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":413480000},"thread":"main","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","message":"Updating port to 8761","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722978,"nanoOfSecond":425315000},"thread":"main","level":"INFO","loggerName":"com.expensetracker.serviceregistry.ServiceRegistryApplication","message":"Started ServiceRegistryApplication in 1.8 seconds (process running for 2.216)","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":1,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722980,"nanoOfSecond":2420000},"thread":"Eureka-CacheFillTimer","level":"DEBUG","loggerName":"com.netflix.eureka.registry.ResponseCacheImpl","message":"Updating the client cache from response cache","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":56,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722987,"nanoOfSecond":925235000},"thread":"SpringApplicationShutdownHook","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","message":"Unregistering application SERVICE-REGISTRY with eureka with status DOWN","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":18,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722987,"nanoOfSecond":945399000},"thread":"SpringApplicationShutdownHook","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","message":"Shutting down Eureka Server..","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":18,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722987,"nanoOfSecond":948469000},"thread":"SpringApplicationShutdownHook","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Shutting down ...","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":18,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722987,"nanoOfSecond":971777000},"thread":"SpringApplicationShutdownHook","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Shut down","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":18,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722987,"nanoOfSecond":975711000},"thread":"SpringApplicationShutdownHook","level":"INFO","loggerName":"org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap","message":"Eureka Service is now shutdown...","endOfBatch":false,"loggerFqcn":"org.apache.commons.logging.LogAdapter$Log4jLog","threadId":18,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722987,"nanoOfSecond":976705000},"thread":"SpringApplicationShutdownHook","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Shutting down ...","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":18,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722987,"nanoOfSecond":954746000},"thread":"Eureka-Jersey3Client-Conn-Cleaner2","level":"ERROR","loggerName":"com.netflix.discovery.shared.transport.jersey3.EurekaJersey3ClientImpl","message":"Cannot clean connections","thrown":{"commonElementCount":0,"localizedMessage":"Client instance has been closed.","message":"Client instance has been closed.","name":"java.lang.IllegalStateException","extendedStackTrace":[{"classLoaderName":"app","class":"org.glassfish.jersey.internal.guava.Preconditions","method":"checkState","file":"Preconditions.java","line":169,"exact":false,"location":"jersey-common-3.1.5.jar","version":"?"},{"classLoaderName":"app","class":"org.glassfish.jersey.client.JerseyClient","method":"checkNotClosed","file":"JerseyClient.java","line":248,"exact":false,"location":"jersey-client-3.1.5.jar","version":"?"},{"classLoaderName":"app","class":"org.glassfish.jersey.client.JerseyClient","method":"getConfiguration","file":"JerseyClient.java","line":363,"exact":false,"location":"jersey-client-3.1.5.jar","version":"?"},{"classLoaderName":"app","class":"org.glassfish.jersey.client.JerseyClient","method":"getConfiguration","file":"JerseyClient.java","line":54,"exact":false,"location":"jersey-client-3.1.5.jar","version":"?"},{"classLoaderName":"app","class":"com.netflix.discovery.shared.transport.jersey3.EurekaJersey3ClientImpl$ConnectionCleanerTask","method":"run","file":"EurekaJersey3ClientImpl.java","line":347,"exact":true,"location":"eureka-client-jersey3-2.0.1.jar","version":"2.0.1"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.util.concurrent.Executors$RunnableAdapter","method":"call","file":"Executors.java","line":539,"exact":true,"location":"?","version":"?"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.util.concurrent.FutureTask","method":"run","file":"FutureTask.java","line":264,"exact":true,"location":"?","version":"?"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask","method":"run","file":"ScheduledThreadPoolExecutor.java","line":304,"exact":true,"location":"?","version":"?"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.util.concurrent.ThreadPoolExecutor","method":"runWorker","file":"ThreadPoolExecutor.java","line":1136,"exact":true,"location":"?","version":"?"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.util.concurrent.ThreadPoolExecutor$Worker","method":"run","file":"ThreadPoolExecutor.java","line":635,"exact":true,"location":"?","version":"?"},{"module":"java.base","moduleVersion":"17.0.10","class":"java.lang.Thread","method":"run","file":"Thread.java","line":840,"exact":true,"location":"?","version":"?"}]},"endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":30,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722987,"nanoOfSecond":979359000},"thread":"SpringApplicationShutdownHook","level":"INFO","loggerName":"com.netflix.eureka.DefaultEurekaServerContext","message":"Shut down","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":18,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722987,"nanoOfSecond":988856000},"thread":"SpringApplicationShutdownHook","level":"INFO","loggerName":"com.netflix.discovery.DiscoveryClient","message":"Shutting down DiscoveryClient ...","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":18,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
{"instant":{"epochSecond":1742722987,"nanoOfSecond":989409000},"thread":"SpringApplicationShutdownHook","level":"INFO","loggerName":"com.netflix.discovery.DiscoveryClient","message":"Completed shut down of DiscoveryClient","endOfBatch":false,"loggerFqcn":"org.apache.logging.slf4j.Log4jLogger","threadId":18,"threadPriority":5,"timestamp":"${ctx:timestamp}","level":"${ctx:level}","thread":"${ctx:thread}","logger":"${ctx:logger}","message":"${ctx:message}"}
